knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- read.table("http://www.stat.columbia.edu/~gelman/arm/examples/pyth/")
df <- read.table("http://www.stat.columbia.edu/~gelman/arm/examples/pyth/", header = TRUE)
?read.table
df <- read.table(file = "http://www.stat.columbia.edu/~gelman/arm/examples/pyth/", header = TRUE)
df <- read.table(file = "http://www.stat.columbia.edu/~gelman/arm/examples/pyth/?C=N;O=A", header = TRUE)
df <- read.table(file = "http://www.stat.columbia.edu/~gelman/arm/examples/pyth", header = TRUE)
read.table("http://www.stat.columbia.edu/~gelman/arm/examples/pyth/exercise2.1.dat", header = TRUE)
df <- read.table("http://www.stat.columbia.edu/~gelman/arm/examples/pyth/exercise2.1.dat", header = TRUE)
df <- read.table("http://www.stat.columbia.edu/~gelman/arm/examples/pyth/exercise2.1.dat", header = TRUE)
df_train <- df %>% head(40)
df_test <- df %>% tail(20)
df_train
fit_1 <- lm(y ~ x1 + x2, data = df_train)
summary(fit_1)
ggplot(df_train, aes(x = x1, y = y)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Y vs x1")
ggplot(df_train, aes(x = x1, y = y)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Y vs x1")
ggplot(df_train, aes(x = x2, y = y)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(df_train, aes(x = x2, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_classic()
summary(fit_1)
x1_fit <- lm(y ~ x1, data = df_train)
x1_res <- resid(x1_fit)
y_vs_x1_res <- plot(df_train$x1, x1_res,
ylab = "Residuals",
xlab = "x1",
main = "x1 Residuals")
{
y_vs_x1_res <- plot(df_train$x1, x1_res,
ylab = "Residuals",
xlab = "x1",
main = "x1 Residuals")
abline(0,0)
}
y_vs_x1_res
x1_fit <- lm(y ~ x1, data = df_train)
x1_res <- resid(x1_fit)
x2_fit <- lm(y ~ x2, data = df_train)
x2_res <- resid(x2_fit)
{
plot(df_train$x2, x2_res,
ylab = "Residuals",
xlab = "x2",
main = "x2 Residuals")
abline(0,0)
}
{
plot(df_train$x1, x1_res,
ylab = "Residuals",
xlab = "x1",
main = "x1 Residuals")
abline(0,0)
}
?predict
predict(df_test, newdata = fit_1)
df_test
df_test <- df_test %>%
select(x1, x2)
df_test
predict(df_test, newdata = fit_1)
df_test
predict(df_test, newdata = fit_1)
df_test <- df %>% tail(20) %>%
select(x1,x2)
df_test
predict(df_test, newdata = fit_1)
df_test
predict(df_test, newdata = fit_1)
{
plot(df_train$x2, x2_res,
ylab = "Residuals",
xlab = "x2",
main = "x2 Residuals")
abline(0,0)
}
predict(df_test, newdata = fit_1)
predict(data.frame(df_test), newdata = fit_1)
df_test
df_test
predict(df_test, newdata = fit_1)
predict(data.fram(df_test), newdata = fit_1)
predict(data.frame(df_test), newdata = fit_1)
predict(fit_1, newdata = df_test)
predictions_fit_1 <- predict(fit_1, newdata = df_test)
summary(fit_1)
{
plot(df_train$x1, x1_res,
ylab = "Residuals",
xlab = "x1",
main = "x1 Residuals")
abline(0,0)
}
var1 <- rnorm(1000,0,1)
var2 <- rnorm(1000,0,1)
fit_3 <- lm(var1 ~ var2)
summary(fit_3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
var1 <- rnorm(1000,0,1)
var2 <- rnorm(1000,0,1)
fit_3 <- lm(var1 ~ var2)
summary(fit_3)
z.scores <- rep (NA, 100)
for (k in 1:100) {
var1 <- rnorm (1000,0,1)
var2 <- rnorm (1000,0,1)
fit <- lm (var2 ~ var1)
z.scores[k] <- coef(fit)[2]/se.coef(fit)[2]
}
?se.coef
??se.coef
var1 <- rnorm(1000,0,1)
var2 <- rnorm(1000,0,1)
fit_3 <- lm(var1 ~ var2)
summary(fit_3)
z.scores <- rep (NA, 100)
for (k in 1:100) {
var1 <- rnorm (1000,0,1)
var2 <- rnorm (1000,0,1)
fit <- lm (var2 ~ var1)
z.scores[k] <- coef(fit)[2] / se.coef(fit)[2]
}
se.coef(fit)
se.coef(fit_3)
